
#index
artemis.index.introduccion    = El crecimiento y expansi\u00f3n que ha presentado la inform\u00e1tica ha hecho que las grandes compa\u00f1\u00edas se interesen  en vincular  excelentes profesionales a su equipo de trabajo, en especial  se dedican a buscar buenos programadores para su grupo de desarrollo,  los cuales  pueden ser   incorporados desde eventos que se han estado realizando hace ya varios a\u00f1os, estos han tomado por nombre \u201cmaratones de programaci\u00f3n\u201d, las cuales se llevan a cabo anualmente, en estas participan varias universidades de todo el mundo donde los problemas expuestos son de tipo l\u00f3gico, matem\u00e1tico, trigonom\u00e9trico, entre otros, estos deben resolverse usando algoritmos de programaci\u00f3n  en el menor tiempo posible.  Dichos eventos tienen como finalidad principalmente destacar a los estudiantes con mayor habilidad y pasi\u00f3n en el arte de la codificaci\u00f3n para que posteriormente compitan a nivel regional, nacional y mundialmente. Adem\u00e1s de que los estudiantes destacados sean llamados por importantes compa\u00f1\u00edas para su vinculaci\u00f3n laboral.

#lenguajes
artemis.lenguajes.java.intro       = Es un lenguaje de programaci\u00f3n de prop\u00f3sito general, concurrente, orientado a objetos, que fue dise\u00f1ado espec\u00edficamente para tener tan pocas dependencias de implementaci\u00f3n como fuera posible. Su intenci\u00f3n es permitir que los desarrolladores de aplicaciones escriban el programa una vez y lo ejecuten en cualquier dispositivo, lo que quiere decir que el c\u00f3digo que es ejecutado en una plataforma no tiene que ser recompilado para correr en otra. Java es, a partir de 2012, uno de los lenguajes de programaci\u00f3n m\u00e1s populares en uso, particularmente para aplicaciones de cliente-servidor de web, con unos diez millones de usuarios reportados.  
artemis.lenguajes.python.intro     = Es un lenguaje de programaci\u00f3n interpretado cuya filosof\u00eda hace hincapi\u00e9 en una sintaxis que favorezca un c\u00f3digo legible. Se trata de un lenguaje de programaci\u00f3n multiparadigma, ya que soporta orientaci\u00f3n a objetos, programaci\u00f3n imperativa y, en menor medida, programaci\u00f3n funcional. Es un lenguaje interpretado, usa tipado din\u00e1mico y es multiplataforma.
artemis.lenguajes.cpp.intro        = Es un lenguaje de programaci\u00f3n dise\u00f1ado en 1979 por Bjarne Stroustrup. La intenci\u00f3n de su creaci\u00f3n fue extender al lenguaje de programaci\u00f3n C mecanismos que permiten la manipulaci\u00f3n de objetos. En ese sentido, desde el punto de vista de los lenguajes orientados a objetos, el C++ es un lenguaje h\u00edbrido. Posteriormente se a\u00f1adieron facilidades de programaci\u00f3n gen\u00e9rica, que se sumaron a los paradigmas de estructurada y programaci\u00f3n orientada a objetos. Por esto se suele decir que el C++ es un lenguaje de programaci\u00f3n multiparadigma.


# programacion competitiva
artemis.pcompetitiva.intro              = Las competencias de programaci\u00f3n a nivel mundial han demostrado ser una valiosa herramienta para el aprendizaje y desarrollo de habilidades relacionadas a la programaci\u00f3n en funci\u00f3n de resoluci\u00f3n de problemas, muchas de estas competencias emplean diversos aplicativos webs para el entrenamiento y evaluaci\u00f3n de los estudiantes.
artemis.pcompetitiva.introb             = Es un concurso de programaci\u00f3n algor\u00edtmica para estudiantes universitarios. Equipos de uno a tres integrantes, que representan a su universidad, trabajan para resolver los problemas de la vida real, fomentando la colaboraci\u00f3n, la creatividad, la innovaci\u00f3n y la capacidad de actuar bajo presi\u00f3n. A trav\u00e9s del entrenamiento y la competencia, los equipos se desaf\u00edan unos a otros para elevar la presi\u00f3n y la rapidez con el cual realizan los problemas.  
artemis.pcompetitiva.problema.intro     = Un problema de programaci\u00f3n competitiva es un peque\u00f1o ejercicio de programaci\u00f3n que puede abordar cualquier tema de la vida cotidiana, ciencias puras como la matem\u00e1tica o la f\u00edsica, un juego de mesa como el ajedrez o un rompecabezas. Utilizando la programaci\u00f3n se pueden resolver estos ejercicios y buscar una soluci\u00f3n \u00f3ptima al mismo utilizando matem\u00e1tica, algoritmos matem\u00e1ticos especializados o incluso l\u00f3gica b\u00e1sica.
artemis.pcompetitiva.intro.img.title    = XXXI Marat\u00f3n Nacional de Programaci\u00f3n ACIS-REDIS, Bogot\u00e1 - Colombia

#competencias
artemis.competencias.icpc.title     = The ACM-ICPC International Collegiate Programming Contest
artemis.competencias.icpc.text      = El Concurso Internacional de Programaci\u00f3n Colegial (International Collegiate Programming Contest ICPC) es un concurso de programaci\u00f3n algor\u00edtmica para estudiantes universitarios. Equipos de tres, que representan a su universidad, trabajan para resolver los problemas m\u00e1s reales del mundo, fomentando la colaboraci\u00f3n, la creatividad, la innovaci\u00f3n y la capacidad de desempe\u00f1arse bajo presi\u00f3n. A trav\u00e9s del entrenamiento y la competencia, los equipos se desaf\u00edan entre s\u00ed para elevar el nivel de lo posible. En pocas palabras, es el concurso de programaci\u00f3n m\u00e1s antiguo, m\u00e1s grande y m\u00e1s prestigioso del mundo.
artemis.competencias.icpc.textb     = El ICPC se remonta a 1970, cuando los pioneros del Cap\u00edtulo Alfa de la Sociedad de Honor de Ciencias de la Computaci\u00f3n de la UPE organizaron la primera competencia. La iniciativa se difundi\u00f3 r\u00e1pidamente dentro de los Estados Unidos y Canad\u00e1 como un programa innovador para aumentar la ambici\u00f3n, la capacidad de resoluci\u00f3n de problemas y las oportunidades de los estudiantes m\u00e1s s\u00f3lidos en el campo de la inform\u00e1tica.
artemis.competencias.icpc.textc     = Con el tiempo, el concurso se convirti\u00f3 en una competencia de varios niveles con la primera ronda de campeonato llevada a cabo en 1977. Desde entonces, el concurso se ha convertido en una colaboraci\u00f3n mundial de universidades que organizan competiciones regionales que hacen avanzar a los equipos a la ronda de campeonatos mundial anual,  Las finales mundiales de ICPC (ICPC World Finals). 
artemis.competencias.google.title   = Google\u2019s Coding Competitions
artemis.competencias.google.text    = Google Code Jam es una competencia anual de programaci\u00f3n en la que se pide a los programadores profesionales y estudiantes que resuelvan desaf\u00edos algor\u00edtmicos complejos en un tiempo limitado, utilizando el lenguaje de programaci\u00f3n de su elecci\u00f3n. Este concurso comienza en l\u00ednea y los programadores pueden practicar probando problemas de a\u00f1os pasados.
artemis.competencias.google.textb   = Google Hash Code es un desaf\u00edo de codificaci\u00f3n para equipos de estudiantes y profesionales de todo el mundo. Los mejores equipos ser\u00e1n invitados a una oficina de Google para la ronda final.
artemis.competencias.google.textc   = Google Kick Start es una competencia global de codificaci\u00f3n en l\u00ednea, que consta de rondas de tres horas de una variedad de desaf\u00edos algor\u00edtmicos dise\u00f1ados por ingenieros de Google. Estas competencias se llevan a cabo durante todo el a\u00f1o y los participantes pueden tener la oportunidad de ser invitados a entrevistarse en Google
artemis.competencias.acis.title     = Marat\u00f3n Nacional de Programaci\u00f3n ACIS - REDIS
artemis.competencias.acis.text      = La Marat\u00f3n Nacional de Programaci\u00f3n, organizada por la Asociaci\u00f3n Colombiana de Ingenieros de Sistemas ACIS sirve de mecanismo para clasificar a la Marat\u00f3n Regional Latinoamericana ICPC  que, a su vez, sirve de selectivo para participar en la final mundial de la International Collegiate Programming Contest.
artemis.competencias.ccpl.title     = Colombian Collegiate Programming League
artemis.competencias.ccpl.text      = Colombian Collegiate Programming League (CCPL) es la liga de competencia en programaci\u00f3n m\u00e1s grande de Colombia, realizando diferentes rondas por a\u00f1o en donde las diferentes entidades de educaci\u00f3n superior env\u00edan equipos de estudiantes a competir, las competencias se realizan en diferentes sedes cada ronda y funcionan como entrenamiento para las competencias clasificatorias nacionales en Colombia.
artemis.competencias.masinfo.label  = Mas informaci\u00f3n en: 

#paginas entrenamiento
artemis.entrenamiento.p\u00e1ginas.text          = La comunidad de programaci\u00f3n competitiva alrededor del mundo ha creado y mantenido varios recursos dedicados de internet para la programaci\u00f3n competitiva, ellos ofrecen competencias internas con o sin premios, tambi\u00e9n los archivos de problemas pasados tambi\u00e9n se encuentran en estos para entrenamiento.
artemis.entrenamieto.primera.nombre         = CodeChef
artemis.entrenamieto.primera.descripcion    = Administrado por  by Directi, hostea competencias de 10 d\u00edas de largo un par de competencias peque\u00f1as cada mes, provee una plataforma de creaci\u00f3n de competencias para institutos acad\u00e9micos gratuitamente. El top 10 de ganadores de las competencias grandes obtiene premios en met\u00e1lico y camisetas de tazas de t\u00e9.
artemis.entrenamieto.primera.sitio          = www.codechef.com
artemis.entrenamieto.segundo.nombre         = CodeCup
artemis.entrenamieto.segundo.descripcion    = Competencia anual de programaci\u00f3n IA organizada por la Dutch Olympiad in Informatics desde  2003. 
artemis.entrenamieto.segundo.sitio          = www.codecup.nl
artemis.entrenamieto.tercero.nombre         = Codeforces
artemis.entrenamieto.tercero.descripcion    = Recurso ruso, manten\u00eda por la universidad ITMO, la cual mayormente provee competencias peque\u00f1as una o dos por semana.
artemis.entrenamieto.tercero.sitio          = www.codeforces.com
artemis.entrenamieto.cuarto.nombre          = CodinGame
artemis.entrenamieto.cuarto.descripcion     = Rompecabezas, code golf, organiza regularmente competencias de IA y problemas de optimizaci\u00f3n.
artemis.entrenamieto.cuarto.sitio           = www.codingame.com
artemis.entrenamieto.quinto.nombre          = HackerEarth
artemis.entrenamieto.quinto.descripcion     = Compa\u00f1\u00eda Hind\u00fa que provee entornos de competencia para reclutamiento de personal.
artemis.entrenamieto.quinto.sitio           = www.hackerearth.com
artemis.entrenamieto.sexto.nombre           = HackerRank
artemis.entrenamieto.sexto.descripcion      = Ofrece problemas de programaci\u00f3n en diferentes dominios de las ciencias de la computaci\u00f3n, tambi\u00e9n aloja una competencia anual que permite conexi\u00f3n entre los programadores y los diferentes Startups de Silicon Valley.
artemis.entrenamieto.sexto.sitio            = www.hackerrank.com
artemis.entrenamieto.septimo.nombre         = Project Euler
artemis.entrenamieto.septimo.descripcion    = Gran colecci\u00f3n de problemas matem\u00e1ticos computacionales.
artemis.entrenamieto.septimo.sitio          = www.projecteuler.net
artemis.entrenamieto.octavo.nombre          = Topcoder
artemis.entrenamieto.octavo.descripcion     = Recurso Norteamericano, el cual organiza competencias y tambi\u00e9n provee problemas de clase industrial, como trabajos Freelance, realiza docenas de competencias cada a\u00f1o.
artemis.entrenamieto.octavo.sitio           = www.topcoder.com
artemis.entrenamieto.noveno.nombre          = Online Judge
artemis.entrenamieto.noveno.descripcion     = Contiene m\u00e1s de 10.000 problemas de entrenamiento, almacena los diferentes problemas realizados en competencias clasificatorias en todo el mundo.
artemis.entrenamieto.noveno.sitio           = www.onlinejudge.org


#Biblioteca - Basico
artemis.biblioteca.general.codigoejemplo.title = C\u00f3digo de ejemplo:
artemis.biblioteca.basico.operadores.text      = Los operadores l\u00f3gicos nos proporcionan un resultado a partir de que se cumpla o no una cierta condici\u00f3n, producen un resultado booleano, y sus operandos son tambi\u00e9n valores l\u00f3gicos o asimilables a ellos (los valores num\u00e9ricos son asimilados a cierto o falso seg\u00fan su valor sea cero o distinto de cero). Esto genera una serie de valores que, en los casos m\u00e1s sencillos, pueden ser parametrizados con los valores num\u00e9ricos 0 y 1. La combinaci\u00f3n de dos o m\u00e1s operadores l\u00f3gicos conforma una funci\u00f3n l\u00f3gica.
artemis.biblioteca.basico.lecturaescritura.text = Las lecturas e impresiones de nuestros ejercicios de programaci\u00f3n competitiva, sus algoritmos base y sus modificaciones se realizan por la consola (STDIN, STDOUT), por lo que la programaci\u00f3n de entornos gr\u00e1ficos para nuestros c\u00f3digos no es v\u00e1lida, los siguientes c\u00f3digos muestran ejemplos de c\u00f3mo se realizan las entradas y salidas de diferentes tipos de variables.
artemis.biblioteca.basico.complejidad.text  = En Ciencias de la Computaci\u00f3n, el t\u00e9rmino eficiencia algor\u00edtmica es usado para describir aquellas propiedades de los algoritmos que est\u00e1n relacionadas con la cantidad de recursos utilizados por el algoritmo. Un algoritmo debe ser analizado para determinar el uso de los recursos que realiza. La eficiencia algor\u00edtmica puede ser vista como an\u00e1logo a la ingenier\u00eda de productividad de un procesorepetitivo o continuo.
artemis.biblioteca.basico.condicionales_ciclos.condicional.text = Un condicional, como su nombre lo indica, es una condici\u00f3n para discernir entre una opci\u00f3n u otra, y en el proceso mental normalmente se manifiesta con un \u201cSi\u201d; por ejemplo: Si (va a llover), coge el paraguas. Sint\u00e1cticamente, IF es la palabra reservada para desencadenar el poder de los condicionales en el c\u00f3digo. ELSE expresa \u201cen el caso contrario\u201d. Siguiendo con el ejemplo anterior de la lluvia: if (va a llover) coge el paraguas else coge el ba\u00f1ador.
artemis.biblioteca.basico.condicionales_ciclos.ciclo.text = Un bucle o ciclo, en programaci\u00f3n, es una secuencia que ejecuta repetidas veces un trozo de c\u00f3digo, hasta que la condici\u00f3n asignada a dicho bucle deja de cumplirse. Los tres bucles m\u00e1s utilizados en programaci\u00f3n son el bucle while, el bucle for y el bucle do-while.
artemis.biblioteca.basico.excepciones.text = El manejo de excepciones es una t\u00e9cnica de programaci\u00f3n que permite al programador controlar los errores ocasionados durante la ejecuci\u00f3n de un programa inform\u00e1tico. Cuando ocurre cierto tipo de error, el sistema reacciona ejecutando un fragmento de c\u00f3digo que resuelve la situaci\u00f3n, por ejemplo retornando un mensaje de error o devolviendo un valor por defecto.
artemis.biblioteca.basico.excepciones.ejemplo_entrada.text = //Ejemplo de entrada = 5
artemis.biblioteca.basico.excepciones.c++_comentario.text = //No es necesario controlar las excepciones, no almacena nada nuevo por lo que  el programa mostrara el valor que anteriormente ten\u00eda esa posici\u00f3n de memoria 

#Biblioteca - Busqueda 
artemis.biblioteca.busqueda.diferencia_pares.parrafo1.text = Dada una matriz sin orden y un n\u00famero n, busque si existe un par de elementos en la matriz cuya diferencia es n. El m\u00e9todo m\u00e1s simple es ejecutar dos bucles, el bucle externo selecciona el primer elemento (elemento m\u00e1s peque\u00f1o) y el bucle interno busca el elemento seleccionado por el bucle externo m\u00e1s n. La complejidad del tiempo de este m\u00e9todo es O (n ^ 2).
artemis.biblioteca.busqueda.diferencia_pares.parrafo2.text = Podemos usar la ordenaci\u00f3n y la b\u00fasqueda binaria para mejorar la complejidad del tiempo a O (nLogn). El primer paso es ordenar el array en orden ascendente. Una vez que el array est\u00e9 ordenado, recorra el array de izquierda a derecha y, para cada elemento arr [i], la b\u00fasqueda binaria de arr [i] + n en arr [i + 1...n-1]. Si se encuentra el elemento, devuelva el par. Tanto el primer como el segundo paso toman O (nLogn). As\u00ed que la complejidad global es O (nLogn).
artemis.biblioteca.busqueda.diferencia_pares.parrafo3.text = El segundo paso del algoritmo anterior se puede mejorar a O (n). El primer paso sigue siendo el mismo. La idea para el segundo paso es tomar dos variables de \u00edndice i y j, inicializarlas como 0 y 1 respectivamente. Ahora ejecuta un bucle lineal. Si arr [j] - arr [i] es m\u00e1s peque\u00f1o que n, debemos buscar un arr mayor [j], as\u00ed que aumente j. Si arr [j] - arr [i] es mayor que n, debemos buscar un arr mayor [i], entonces incremente i.


#Estructuras de datos B\u00e1sicas
artemis.estructuras.descripcion.text = Lo habitual es que un vector tenga una cantidad fija de memoria asignada, aunque dependiendo del tipo de vector y del lenguaje de programaci\u00f3n un vector podr\u00eda tener una cantidad variable de datos. En este caso, se les denomina vectores din\u00e1micos, en oposici\u00f3n, a los vectores con una cantidad fija de memoria asignada se los denomina vectores est\u00e1ticos. El uso de vectores din\u00e1micos requiere realizar una apropiada gesti\u00f3n de memoria din\u00e1mica. Un uso incorrecto de los vectores din\u00e1micos, o mejor dicho, una mala gesti\u00f3n de la memoria din\u00e1mica, puede conducir a una fuga de memoria. Al utilizar vectores din\u00e1micos siempre habr\u00e1 que liberar la memoria utilizada cuando \u00e9sta ya no se vaya a seguir utilizando. Lenguajes m\u00e1s modernos y de m\u00e1s alto nivel, cuentan con un mecanismo denominado recolector de basura que permiten que el programa decida si debe liberar el espacio bas\u00e1ndose en si se va a utilizar en el futuro o no un determinado objeto.
artemis.estructuras.vector.text = Se le denomina vector o formaci\u00f3n (en ingl\u00e9s Array) a una zona de almacenamiento contiguo que contiene una serie de elementos del mismo tipo, los elementos de la matriz. Desde el punto de vista l\u00f3gico una matriz se puede ver como un conjunto de elementos ordenados en fila (o filas y columnas si tuviera dos dimensiones). Estas estructuras de datos son adecuadas para situaciones en las que el acceso a los datos se realice de forma aleatoria e impredecible. Por el contrario, si los elementos pueden estar ordenados y se va a utilizar acceso secuencial ser\u00eda m\u00e1s adecuado utilizar una lista, ya que esta estructura puede cambiar de tama\u00f1o f\u00e1cilmente durante la ejecuci\u00f3n de un programa.
artemis.estructuras.vectordinamico.text= En programaci\u00f3n, un arreglo din\u00e1mico o Array din\u00e1mico, es un Array de elementos que crece o mengua din\u00e1micamente conforme los elementos se agregan o se eliminan. Se suministra como librer\u00edas est\u00e1ndar en muchos lenguajes modernos de programaci\u00f3n. 
artemis.estructuras.vectorsinrepetir.text= Set es una interfaz que ampl\u00eda la colecci\u00f3n. Es una colecci\u00f3n desordenada de objetos en la que no se pueden almacenar valores duplicados. Set tiene varios m\u00e9todos para agregar, eliminar, borrar, tama\u00f1o, etc. 
artemis.estructuras.matriz.text = Es una tabla bidimensional de n\u00fameros consistentes en cantidades abstractas con las que se pueden realizar diferentes operaciones, como por ejemplo la suma, multiplicaci\u00f3n y descomposici\u00f3n de las mismas de varias formas, lo que tambi\u00e9n las hace un concepto clave en el campo del \u00e1lgebra lineal. Las matrices se utilizan para describir sistema de ecuaciones lineales, realizar un seguimiento de los coeficientes de una aplicaci\u00f3n lineal y registrar los datos que dependen de varios par\u00e1metros.
artemis.estructuras.diccionario.text= Los mapas son contenedores asociativos que almacenan elementos de forma mapeada. Cada elemento tiene un valor clave y un valor asignado. No hay dos valores asignados que puedan tener los mismos valores clave
artemis.estructuras.pila.text=Es una lista ordenada o estructura de datos que permite almacenar y recuperar datos, el modo de acceso a sus elementos es de tipo LIFO (del ingl\u00e9s Last In, First Out, \u00ab\u00faltimo en entrar, primero en salir\u00bb). Esta estructura se aplica en multitud de supuestos en el \u00e1rea de inform\u00e1tica debido a su simplicidad y capacidad de dar respuesta a numerosos procesos.
artemis.estructuras.cola.text=Es una estructura de datos, caracterizada por ser una secuencia de elementos en la que la operaci\u00f3n de inserci\u00f3n push se realiza por un extremo y la operaci\u00f3n de extracci\u00f3n pop por el otro. Tambi\u00e9n se le llama estructura FIFO (del ingl\u00e9s First In First Out), debido a que el primer elemento en entrar ser\u00e1 tambi\u00e9n el primero en salir.