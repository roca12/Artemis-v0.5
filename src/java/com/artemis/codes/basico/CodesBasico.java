package com.artemis.codes.basico;

public class CodesBasico {

    //ciclos y condicionales
    public static String ciclosjava = "import java.util.Scanner;\n"
            + "\n"
            + "public class CondicionalesCiclos {\n"
            + "\n"
            + "    public static void main(String[] args) {\n"
            + "        Scanner sc = new Scanner(System.in);\n"
            + "        //Lectura \n"
            + "        int numero = sc.nextInt();\n"
            + "        //Estructura de un condicional\n"
            + "        //Dentro el parentesis va la condicion a revisar\n"
            + "        //Si se cumple se realiza las siguientes lineas\n"
            + "        //En caso contrario pasa al else \n"
            + "        //y se realiza las lineas siguientes del else\n"
            + "        if (numero % 2 == 0) {\n"
            + "            System.out.println(\"Es par\");\n"
            + "        } else {\n"
            + "            System.out.println(\"Es impar\");\n"
            + "        }\n"
            + "        System.out.println(\"\");\n"
            + "        System.out.println(\"Ciclo for \");\n"
            + "        // variable iteradora, condicion , acumulador\n"
            + "        for (int i = 0; i < 10; i++) {\n"
            + "            System.out.println(i);\n"
            + "        }\n"
            + "        System.out.println(\"Ciclo while\");\n"
            + "        //Variable, condicion, al final acumulador\n"
            + "        int acumulador = 0;\n"
            + "        while (acumulador < 10) {\n"
            + "            System.out.println(acumulador);\n"
            + "            acumulador++;\n"
            + "\n"
            + "        }\n"
            + "        System.out.println(\"Ciclo do while\");\n"
            + "        //Haga hasta que una condición se cumpla\n"
            + "        acumulador = 0;\n"
            + "        do {\n"
            + "            System.out.println(acumulador);\n"
            + "            acumulador++;\n"
            + "        } while (acumulador < 10);\n"
            + "        System.out.println(\"Ciclo for each\");\n"
            + "        //Iterar entre todos los elementos que tenga una estructura\n"
            + "        //Sin importar el tamaño \n"
            + "        int numeros[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 0};\n"
            + "        for (int o : numeros) {\n"
            + "            System.out.println(o);\n"
            + "        }\n"
            + "\n"
            + "    }\n"
            + "\n"
            + "}";
    public static String cicloscpp = "#include<bits/stdc++.h>\n"
            + "#include<cstdlib>\n"
            + "using namespace std;\n"
            + "\n"
            + "int main(int argc, char *argv[]) {\n"
            + "    int número;\n"
            + "    cin>>número;\n"
            + "    //Estructura de un condicional\n"
            + "    //Dentro el parentesis va la condicion a revisar\n"
            + "    //Si se cumple se realiza las siguientes lineas\n"
            + "    //En caso contrario pasa al else \n"
            + "    //y se realiza las lineas siguientes del else\n"
            + "    if (número % 2 == 0) {\n"
            + "        cout << \"Es par\" << endl;\n"
            + "    } else {\n"
            + "        cout << \"Es impar\" << endl;\n"
            + "    }\n"
            + "    cout << endl;\n"
            + "    cout << \"Ciclo for \" << endl;\n"
            + "    // variable iteradora, condicion , acumulador\n"
            + "    for (int i = 0; i < 10; i++) {\n"
            + "        cout << i << endl;\n"
            + "    }\n"
            + "    cout << \"Ciclo while\" << endl;\n"
            + "    //Variable, condicion, al final acumulador\n"
            + "    int acumulador = 0;\n"
            + "    while (acumulador < 10) {\n"
            + "        cout << acumulador << endl;\n"
            + "        acumulador++;\n"
            + "    }\n"
            + "    cout << \"Ciclo do while\" << endl;\n"
            + "    //Haga hasta que una condición se cumpla\n"
            + "    acumulador = 0;\n"
            + "    do {\n"
            + "        cout << acumulador << endl;\n"
            + "        acumulador++;\n"
            + "    } while (acumulador < 10);\n"
            + "    cout << \"Ciclo for each\" << endl;\n"
            + "    //Iterar entre todos los elementos que tenga una estructura\n"
            + "    //Sin importar el tamaño \n"
            + "    int números[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 0};\n"
            + "    for (int o : números) {\n"
            + "        cout << o << endl;\n"
            + "    }\n"
            + "    return 0;\n"
            + "}";
    public static String ciclospy = "numero = 0;\n"
            + "numero = int(input())\n"
            + "#Estructura de un condicional\n"
            + "#Dentro el parentesis va la condicion a revisar\n"
            + "#Si se cumple se realiza las siguientes lineas\n"
            + "#En caso contrario pasa al else \n"
            + "#y se realiza las lineas siguientes del else\n"
            + "if (numero % 2 == 0):\n"
            + "    print(\"Es par\")\n"
            + "else: \n"
            + "    print(\"Es impar\")\n"
            + "print(\"Ciclo for \")\n"
            + "#variable iteradora, rango inicio,final\n"
            + "for i in range (0, 10):\n"
            + "    print(i)\n"
            + "print(\"Ciclo while\")\n"
            + "#Variable, condicion, al final acumulador\n"
            + "acumulador = 0;\n"
            + "while (acumulador < 10):\n"
            + "    print(acumulador)\n"
            + "    acumulador = acumulador + 1;\n"
            + "print(\"Ciclo for each\")\n"
            + "#Iterar entre todos los elementos que tenga una estructura\n"
            + "#Sin importar el tamaño \n"
            + "numeros = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]\n"
            + "for o in numeros:\n"
            + "    print(o)";
    public static String lecturaimpresionjava = "import java.io.BufferedReader;\n"
            + "import java.io.IOException;\n"
            + "import java.io.InputStreamReader;\n"
            + "import java.util.Scanner;\n"
            + "\n"
            + "public class LecturaEscritura {\n"
            + "    //Variables Globales\n"
            + "    static int numeroentero;\n"
            + "    static long numeroenterolargo;\n"
            + "    static float numerodecimal;\n"
            + "    static double numerodecimallargo;\n"
            + "    static char caracter;\n"
            + "    static String cadena;\n"
            + "    static byte bits;\n"
            + "\n"
            + "    public static void main(String[] args) throws IOException {\n"
            + "        System.out.println(\"Lectura\\n\");\n"
            + "        lecturaLenta();\n"
            + "        lecturaRapida();\n"
            + "        System.out.println(\"\");\n"
            + "        System.out.println(\"Impresión \\n\");\n"
            + "        impresionNormal();\n"
            + "        impresionConFormato();\n"
            + "    }\n"
            + "\n"
            + "    static void lecturaLenta() {\n"
            + "        //Objeto lector\n"
            + "        Scanner sc = new Scanner(System.in);\n"
            + "        //Lectura con tipo especificado\n"
            + "        numeroentero = sc.nextInt();\n"
            + "        numeroenterolargo = sc.nextLong();\n"
            + "        numerodecimal = sc.nextFloat();\n"
            + "        numerodecimallargo = sc.nextDouble();\n"
            + "        caracter = sc.next().charAt(0);\n"
            + "        cadena = sc.next();\n"
            + "        bits = sc.nextByte();\n"
            + "    }\n"
            + "    static void lecturaRapida() throws IOException {\n"
            + "        //Objeto lector\n"
            + "        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n"
            + "        //Lectura como cadena y conversión a tipo\n"
            + "        numeroentero = Integer.parseInt(br.readLine());\n"
            + "        numeroenterolargo = Long.parseLong(br.readLine());\n"
            + "        numerodecimal = Float.parseFloat(br.readLine());\n"
            + "        numerodecimallargo = Double.parseDouble(br.readLine());\n"
            + "        caracter = br.readLine().charAt(0);\n"
            + "        cadena = br.readLine();\n"
            + "        bits = Byte.parseByte(br.readLine());\n"
            + "    }\n"
            + "\n"
            + "    static void impresionNormal() {\n"
            + "        System.out.println(numeroentero);\n"
            + "        System.out.println(numeroenterolargo);\n"
            + "        System.out.println(numerodecimal);\n"
            + "        System.out.println(numerodecimallargo);\n"
            + "        System.out.println(caracter);\n"
            + "        System.out.println(cadena);\n"
            + "        System.out.println(bits);\n"
            + "    }\n"
            + "\n"
            + "    static void impresionConFormato() {\n"
            + "        //Se especifica el tipo de dato o la forma en que se imprimira\n"
            + "        System.out.printf(\"%d \\n\", numeroentero);\n"
            + "        System.out.printf(\"%d \\n\", numeroenterolargo);\n"
            + "        System.out.printf(\"%f \\n\", numerodecimal);\n"
            + "        System.out.printf(\"%e \\n\", numerodecimal);\n"
            + "        System.out.printf(\"%f \\n\", numerodecimallargo);\n"
            + "        System.out.printf(\"%e \\n\", numerodecimallargo);\n"
            + "        System.out.printf(\"%s \\n\", caracter);\n"
            + "        System.out.printf(\"%s \\n\", cadena);\n"
            + "        System.out.printf(\"%s \\n\", bits);\n"
            + "    }\n"
            + "}";
    public static String lecturaimpresioncpp = "//Unicas 2 librerias que se usan en c++ (Contienen todas)\n"
            + "#include<bits/stdc++.h>\n"
            + "#include<cstdlib>\n"
            + "using namespace std;\n"
            + "//variables globales\n"
            + "int numeroentero;\n"
            + "long numeroenterolargo;\n"
            + "float numerodecimal;\n"
            + "double numerodecimallargo;\n"
            + "char caracter;\n"
            + "string cadena;\n"
            + "\n"
            + "void lecturaLenta() {\n"
            + "        //Lectura con tipo especificado\n"
            + "        cin>>numeroentero;\n"
            + "        cin>>numeroenterolargo;\n"
            + "        cin>>numerodecimal;\n"
            + "        cin>>numerodecimallargo;\n"
            + "        cin>>caracter;\n"
            + "        cin>>cadena;\n"
            + "}\n"
            + "void lecturaRapida() {\n"
            + "        //Lectura como cadena y conversión a tipo (En c++ & es necesario)\n"
            + "        scanf(\"%d\",&numeroentero);\n"
            + "        scanf(\"%lld\",&numeroenterolargo);\n"
            + "        scanf(\"%f\",&numerodecimal);\n"
            + "        scanf(\"%lf\",&numerodecimallargo);\n"
            + "        scanf(\"%s\",&caracter);\n"
            + "        scanf(\"%s\",cadena.c_str());\n"
            + "}\n"
            + "void impresionNormal() {\n"
            + "        cout<<numeroentero<<endl;\n"
            + "        cout<<numeroenterolargo<<endl;\n"
            + "        cout<<numerodecimal<<endl;\n"
            + "        cout<<numerodecimallargo<<endl;\n"
            + "        cout<<caracter<<endl;\n"
            + "        cout<<cadena<<endl;\n"
            + "}\n"
            + " void impresionConFormato() {\n"
            + "        //Se especifica el tipo de dato o la forma en que se imprimira\n"
            + "        printf(\"%d \\n\",numeroentero);\n"
            + "        printf(\"%lld \\n\",numeroenterolargo);\n"
            + "        printf(\"%f \\n\",numerodecimal);\n"
            + "        printf(\"%e \\n\",numerodecimal);\n"
            + "        printf(\"%lf \\n\",numerodecimallargo);\n"
            + "        printf(\"%e \\n\",numerodecimallargo);\n"
            + "        printf(\"%c \\n\",caracter);\n"
            + "        printf(\"%s \\n\",cadena.c_str());\n"
            + "}\n"
            + "        \n"
            + "int main (int argc, char *argv[]) {\n"
            + "        cout<<\"Lectura\\n\"<<endl;\n"
            + "        lecturaLenta();\n"
            + "        cout<<\"Impresión \\n\"<<endl;\n"
            + "        impresionNormal();\n"
            + "        cout<<endl;\n"
            + "        cout<<\"Lectura\\n\"<<endl;\n"
            + "        lecturaRapida();\n"
            + "        cout<<\"Impresión \\n\"<<endl;\n"
            + "        impresionConFormato();\n"
            + "        return 0;\n"
            + "}       ";
    public static String lecturaimpresionpy = "#Los comentarios en Python se usa el # (Numeral)\n"
            + "#variables globales\n"
            + "#la identación define el orden\n"
            + "numeroentero = int(0)\n"
            + "numeroenterolargo = int(0)\n"
            + "numerodecimal = float(0)\n"
            + "numerodecimallargo = float(0)\n"
            + "caracter = ''\n"
            + "cadena = \"\"\n"
            + "print(\"Lectura\")\n"
            + "#Lectura con tipo especificado\n"
            + "numeroentero = int(input())\n"
            + "numeroenterolargo = int(input())\n"
            + "numerodecimal = float(input())\n"
            + "numerodecimallargo = float(input())\n"
            + "caracter = input()\n"
            + "cadena = str(input())\n"
            + "print(\"Impresión\")\n"
            + "print(numeroentero)\n"
            + "print(numeroenterolargo)\n"
            + "print(numerodecimal)\n"
            + "print(numerodecimallargo)\n"
            + "print(caracter)\n"
            + "print(cadena)\n"
            + "print(\"Impresión formateada\")\n"
            + "#Se especifica el tipo de dato o la forma en que se imprimira\n"
            + "#obligatorio usar el % \n"
            + "print(\"%d\" % numeroentero)\n"
            + "print(\"%d\" % numeroenterolargo)\n"
            + "print(\"%f\" % numerodecimal)\n"
            + "print(\"%e\" % numerodecimal)\n"
            + "print(\"%f\" % numerodecimallargo)\n"
            + "print(\"%e\" % numerodecimallargo)\n"
            + "print(\"%c\" % caracter)\n"
            + "print(\"%s\" % cadena)";
    public static String excepcionesjava = "import java.util.Scanner;\n"
            + "public class ControlExcep {\n"
            + "    public static void main(String[] args) {\n"
            + "        Scanner sc = new Scanner(System.in);\n"
            + "        int numero;\n"
            + "        //Intenta guardar el dato en la variable\n"
            + "        //Si falla controla la excepcion y \n"
            + "        //realiza otra cosa sin terminar la ejecución\n"
            + "        try {\n"
            + "            numero = sc.nextInt();\n"
            + "            System.out.println(numero);\n"
            + "        } catch (Exception e) {\n"
            + "            System.out.println(\"El dato insertado no es un número\");\n"
            + "            System.out.println(\"O es muy grande para un tipo int\");\n"
            + "        }\n"
            + "    }\n"
            + "}";
    public static String excepcionescpp = "No aplica";
    public static String excepcionespy = "numero = 0\n"
            + "#Intenta guardar el dato en la variable\n"
            + "#Si falla controla la excepción y \n"
            + "#realiza otra cosa sin terminar la ejecución\n"
            + "try:\n"
            + "    numero = int(input())\n"
            + "    print (numero)\n"
            + "except:\n"
            + "    print (\"El dato insertado no es un numero\")\n"
            + "    print (\"O es muy grande para un tipo int\")";

}
